name: "AI PR Helper"

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  ai-pr-helper:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch main branch
        run: |
          git fetch origin main

      - name: Generate diff
        run: |
          # Use double-dot to avoid merge base error
          git diff origin/main..HEAD > changes.diff || true
          head -n 200 changes.diff > short.diff || true

      - name: Install Cohere
        run: pip install cohere

      - name: Generate PR title and description with Cohere
        id: ai-pr
        run: |
          python <<EOF
          import cohere, os, sys

          co = cohere.Client(os.getenv("COHERE_API_KEY"))
          diff = open("short.diff", "r", encoding="utf-8").read()

          if not diff.strip():
              print("::error::No code changes detected to summarize")
              sys.exit(1)

          prompt = f"Generate a clear GitHub Pull Request title and description based on this code diff:\n{diff}\n\nFormat:\nTITLE: <short title>\nDESCRIPTION: <detailed body>"

          response = co.generate(
              model="command-xlarge-nightly",
              prompt=prompt,
              max_tokens=300,
              temperature=0.3
          )

          text = response.generations[0].text.strip()
          title, desc = "", ""

          for line in text.splitlines():
              if line.startswith("TITLE:"):
                  title = line.replace("TITLE:", "").strip()
              elif line.startswith("DESCRIPTION:"):
                  desc = line.replace("DESCRIPTION:", "").strip()

          if not title or not desc:
              print("::error::Failed to generate title or description")
              sys.exit(1)

          print(f"::set-output name=title::{title}")
          print(f"::set-output name=desc::{desc}")
          EOF
        env:
          COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}

      - name: Update PR
        if: steps.ai-pr.outputs.title != '' && steps.ai-pr.outputs.desc != ''
        run: |
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} \
            -f title="${{ steps.ai-pr.outputs.title }}" \
            -f body="${{ steps.ai-pr.outputs.desc }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
