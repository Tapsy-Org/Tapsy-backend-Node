name: CI/CD Pipeline

on:
  push:
    branches-ignore:
      - main
      - production
  pull_request:
    # Run on all PRs regardless of target branch

jobs:
  branch-naming:
    runs-on: ubuntu-latest
    steps:
      - name: Validate branch name
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}"
          LOWER="${BRANCH_NAME,,}"
          # Skip validation for main and production branches
          if [[ "$LOWER" == "main" ]] || [[ "$LOWER" == "production" ]]; then
            echo "Skipping branch name validation for $BRANCH_NAME (main/production branch)"
            exit 0
          fi
          # Validate feature branch naming
          if [[ ! "$LOWER" =~ ^(feature|bugfix|hotfix|fix|chore|docs|feat|test)\/[a-z0-9._-]+$ ]]; then
            echo "Invalid branch name: $BRANCH_NAME"
            echo "Branch names must follow: feature/<name>, bugfix/<name>, hotfix/<name>, fix/<name>, chore/<name>, docs/<name>, feat/<name>, test/<name> (lowercase)"
            exit 1
          fi
          echo "Branch name validation passed for: $BRANCH_NAME"

  test-and-quality:
    runs-on: ubuntu-latest
    needs: branch-naming
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run formatting check
        run: npm run format:check

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration

      - name: Run full test suite with coverage
        run: npm run test:coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test-and-quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts (only main/develop)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  security-scan:
    runs-on: ubuntu-latest
    needs: test-and-quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run dependency check
        run: npx audit-ci --moderate
