name: Deploy Tapsy Backend to AWS ECS

on:
  push:
    branches:
      - main       # Deploys to your DEV environment
      - production # Deploys to your PROD environment

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: tapsy/tapsy-backend-node
  ECS_CLUSTER: Tapsy

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f docker/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          
      # --- Deployment to DEV Environment ---
      - name: Prepare new task definition for DEV
        if: github.ref == 'refs/heads/main'
        id: render-dev-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: backend-dev
          container-name: backend-dev-container
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy to DEV service
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-dev-task.outputs.task-definition }}
          service: backend-dev-service
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      # --- Deployment to PRODUCTION Environment ---
      - name: Prepare new task definition for PROD
        if: github.ref == 'refs/heads/production'
        id: render-prod-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: backend-prod
          container-name: backend-prod-container
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy to PROD service
        if: github.ref == 'refs/heads/production'
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-prod-task.outputs.task-definition }}
          service: backend-prod-service
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true